// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// All of the models follow field groping schema
// 1. id and other usual stuff
// 2. relations
// 3. fields
// 4. other indexes
model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  entries JournalEntry[]

  // Syncing all of the clerk's field would've been a pain
  // just save id and ask clerk for everything
  clerkId String @unique
  email   String @unique
}

model JournalEntry {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId   String
  user     User      @relation(fields: [userId], references: [id])
  analysis Analysis?

  content String @db.Text

  @@unique([userId, id]) // this creates compound index
}

model Analysis {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  entryId String
  entry   JournalEntry @relation(fields: [entryId], references: [id])

  mood       String
  summary    String  @db.Text
  color      String
  isNegative Boolean

  @@unique([entryId])
}
